<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@ 
 output extension=".cs"#><#

var code = new CodeGenerationTools(this);
var loader = new MetadataLoader(this);
var region = new CodeRegion(this, 1);
var ef = new MetadataTools(this);
 
string inputFile = @"D:\Ejer\Documents\visual studio 2015\Projects\MAP.OA\MAP.OA.Model\DataModel.edmx";

var ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();
 
var fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using MAP.OA.EFDAL;
using MAP.OA.IDAL;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace MAP.OA.DALFactory
{
	public class StaticDalFactory
	{
	<#
	foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
	{
	#>
		
		public static I<#=entity.Name#>Dal _Get<#=entity.Name#>Dal()
		{
			return new <#=entity.Name#>Dal();
		}
	<#}#>

		public static string assemblyName = System.Configuration.ConfigurationManager.AppSettings["DalAssemblyName"];

	<#
	foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
	{
	#>
		
		public static I<#=entity.Name#>Dal Get<#=entity.Name#>Dal()
		{
			return Assembly.Load(assemblyName).CreateInstance(assemblyName + ".<#=entity.Name#>Dal") as I<#=entity.Name#>Dal;
		} 
	<#}#>

	}
}

